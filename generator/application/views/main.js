// Content below is autogenerated by ojster template engine
// usually there is no reason to edit it manually
"use strict";
var inherits = require('util').inherits;
var LayoutTemplate = require('./layout');

var Page = function (opt_data, opt_ctx, opt_writer) {
  LayoutTemplate.call(this, opt_data, opt_ctx, opt_writer);
};
inherits(Page, LayoutTemplate);


Page.prototype.renderBlockContentInternal = function () { // @7:1
  var self = this;
  var d = this.data, vars = this.vars;
  self.writer.write(
    '<p>Документация включает себя информацию о HTTP запросах к серверу мобильных клиентов и браузеров, работе с веб-сокетами.</p><h2>Обозначения</h2><p>В описании параметров могут использоваться следующие обозначения:</p><ul><li><code>?</code> — параметр может иметь значение <code>null</code>,</li><li><code>=</code> — необязательный параметр.</li></ul><p>Описание вида <code>JSON(...)</code> обозначает сериализованные в строку данные.</p><p>Примеры:</p><pre js>name: string // обязательный строковый параметр\ntemperature: float // обязательное вещественное число\nrating: int // обязательное целое число\nid: uint // обязательное целое положительное число\nuser: User // обязательный параметр типа User\nuser: User? // обязательный параметр типа User или null\ntemperature: float= // необязательное вещественное число\nrating: int? // обязательное целое число или null\nname: string?= // необязательный строковый параметр или null\ndata: JSON({left:int,top:int}) // Строка, полученная в результате сериализации объекта со свойствами left и top.</pre>'
  );
}; // @30:1

module.exports = Page;
